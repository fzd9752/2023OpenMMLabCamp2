2023/06/11 17:11:41 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1444212722
    GPU 0: NVIDIA GeForce RTX 2070
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
    PyTorch: 2.0.1+cu117
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu117
    OpenCV: 4.7.0
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/11 17:11:42 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='TensorboardVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=100,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=50,
        end=100,
        T_max=50,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=True, base_batch_size=256)
dataset_type = 'CocoDataset'
data_root = '../hw3/Drink_284_Detection_coco/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=40,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='../hw3/Drink_284_Detection_coco/',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (220, 30, 70), (220, 40, 80),
                     (220, 50, 90), (220, 60, 100), (220, 70, 110),
                     (220, 80, 120), (220, 90, 130), (220, 100, 140),
                     (220, 110, 150)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=32,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='../hw3/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (220, 30, 70), (220, 40, 80),
                     (220, 50, 90), (220, 60, 100), (220, 70, 110),
                     (220, 80, 120), (220, 90, 130), (220, 100, 140),
                     (220, 110, 150)])))
test_dataloader = dict(
    batch_size=32,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='../hw3/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (220, 30, 70), (220, 40, 80),
                     (220, 50, 90), (220, 60, 100), (220, 70, 110),
                     (220, 80, 120), (220, 90, 130), (220, 100, 140),
                     (220, 110, 150)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='../hw3/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='../hw3/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=3),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=10,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 100
stage2_num_epochs = 20
base_lr = 0.004
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=95,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(
    classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice', 'scream',
             'milk', 'red', 'king'),
    palette=[(220, 20, 60), (220, 30, 70), (220, 40, 80), (220, 50, 90),
             (220, 60, 100), (220, 70, 110), (220, 80, 120), (220, 90, 130),
             (220, 100, 140), (220, 110, 150)])
num_classes = 10
train_batch_size_per_gpu = 40
train_num_workers = 4
val_batch_size_per_gpu = 32
val_num_workers = 2
num_epochs_stage2 = 5
work_dir = '../hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola'
launcher = 'none'

2023/06/11 17:11:58 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/11 17:11:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/11 17:11:59 - mmengine - INFO - LR is set based on batch size of 256 and the current batch size is 40. Scaling the original LR by 0.15625.
2023/06/11 17:12:00 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/11 17:12:01 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/11 17:12:01 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/11 17:12:01 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/11 17:12:01 - mmengine - INFO - Checkpoints will be saved to /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola.
2023/06/11 17:12:37 - mmengine - INFO - Epoch(train)   [1][5/6]  lr: 8.6212e-05  eta: 1:11:54  time: 7.2514  data_time: 5.4636  memory: 5593  loss: 2.6821  loss_cls: 1.9719  loss_bbox: 0.7102
2023/06/11 17:12:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:13:15 - mmengine - INFO - Epoch(train)   [2][5/6]  lr: 2.1552e-04  eta: 1:06:03  time: 6.7284  data_time: 5.5925  memory: 5593  loss: 2.7378  loss_cls: 2.0604  loss_bbox: 0.6775
2023/06/11 17:13:15 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:13:51 - mmengine - INFO - Epoch(train)   [3][5/6]  lr: 3.4483e-04  eta: 1:02:57  time: 6.4802  data_time: 5.5319  memory: 5593  loss: 2.8059  loss_cls: 2.1754  loss_bbox: 0.6305
2023/06/11 17:13:51 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:14:29 - mmengine - INFO - Epoch(train)   [4][5/6]  lr: 4.7414e-04  eta: 1:01:46  time: 6.4242  data_time: 5.5570  memory: 5593  loss: 2.8271  loss_cls: 2.2417  loss_bbox: 0.5854
2023/06/11 17:14:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:15:05 - mmengine - INFO - Epoch(train)   [5][5/6]  lr: 6.0345e-04  eta: 1:00:29  time: 6.3566  data_time: 5.5376  memory: 5593  loss: 2.7361  loss_cls: 2.1952  loss_bbox: 0.5410
2023/06/11 17:15:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:15:41 - mmengine - INFO - Epoch(train)   [6][5/6]  lr: 6.2500e-04  eta: 0:59:19  time: 6.3000  data_time: 5.5180  memory: 5593  loss: 2.5657  loss_cls: 2.0639  loss_bbox: 0.5017
2023/06/11 17:15:42 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:16:16 - mmengine - INFO - Epoch(train)   [7][5/6]  lr: 6.2500e-04  eta: 0:57:54  time: 6.2164  data_time: 5.4617  memory: 5593  loss: 2.3841  loss_cls: 1.9119  loss_bbox: 0.4722
2023/06/11 17:16:16 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:16:51 - mmengine - INFO - Epoch(train)   [8][5/6]  lr: 6.2500e-04  eta: 0:56:53  time: 6.1726  data_time: 5.4319  memory: 5593  loss: 2.2383  loss_cls: 1.7912  loss_bbox: 0.4471
2023/06/11 17:16:51 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:17:28 - mmengine - INFO - Epoch(train)   [9][5/6]  lr: 6.2500e-04  eta: 0:56:18  time: 5.9441  data_time: 5.3318  memory: 5593  loss: 2.0745  loss_cls: 1.6662  loss_bbox: 0.4083
2023/06/11 17:17:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:18:03 - mmengine - INFO - Epoch(train)  [10][5/6]  lr: 6.2500e-04  eta: 0:55:25  time: 6.0069  data_time: 5.3973  memory: 5593  loss: 1.8669  loss_cls: 1.5109  loss_bbox: 0.3560
2023/06/11 17:18:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:18:04 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/11 17:18:13 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:18:13 - mmengine - INFO - bbox_mAP_copypaste: 0.648 0.738 0.737 -1.000 -1.000 0.648
2023/06/11 17:18:13 - mmengine - INFO - Epoch(val) [10][2/2]    coco/bbox_mAP: 0.6480  coco/bbox_mAP_50: 0.7380  coco/bbox_mAP_75: 0.7370  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6480  data_time: 2.8407  time: 3.5472
2023/06/11 17:18:15 - mmengine - INFO - The best checkpoint with 0.6480 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2023/06/11 17:18:49 - mmengine - INFO - Epoch(train)  [11][5/6]  lr: 6.2500e-04  eta: 0:54:33  time: 5.9730  data_time: 5.3626  memory: 5593  loss: 1.6283  loss_cls: 1.3141  loss_bbox: 0.3142
2023/06/11 17:18:50 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:19:27 - mmengine - INFO - Epoch(train)  [12][5/6]  lr: 6.2500e-04  eta: 0:54:02  time: 5.9590  data_time: 5.3497  memory: 5593  loss: 1.3741  loss_cls: 1.0912  loss_bbox: 0.2829
2023/06/11 17:19:27 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:20:03 - mmengine - INFO - Epoch(train)  [13][5/6]  lr: 6.2500e-04  eta: 0:53:22  time: 5.9630  data_time: 5.3568  memory: 5593  loss: 1.1570  loss_cls: 0.8957  loss_bbox: 0.2613
2023/06/11 17:20:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:20:39 - mmengine - INFO - Epoch(train)  [14][5/6]  lr: 6.2500e-04  eta: 0:52:38  time: 5.9333  data_time: 5.3334  memory: 5593  loss: 1.0122  loss_cls: 0.7655  loss_bbox: 0.2467
2023/06/11 17:20:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:21:12 - mmengine - INFO - Epoch(train)  [15][5/6]  lr: 6.2500e-04  eta: 0:51:41  time: 5.9125  data_time: 5.3129  memory: 5593  loss: 0.9235  loss_cls: 0.6890  loss_bbox: 0.2344
2023/06/11 17:21:12 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:21:46 - mmengine - INFO - Epoch(train)  [16][5/6]  lr: 6.2500e-04  eta: 0:50:51  time: 5.9061  data_time: 5.3145  memory: 5593  loss: 0.8449  loss_cls: 0.6212  loss_bbox: 0.2237
2023/06/11 17:21:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:22:20 - mmengine - INFO - Epoch(train)  [17][5/6]  lr: 6.2500e-04  eta: 0:50:05  time: 5.8482  data_time: 5.2599  memory: 5593  loss: 0.7769  loss_cls: 0.5629  loss_bbox: 0.2139
2023/06/11 17:22:20 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:22:53 - mmengine - INFO - Epoch(train)  [18][5/6]  lr: 6.2500e-04  eta: 0:49:15  time: 5.8021  data_time: 5.2105  memory: 5593  loss: 0.7217  loss_cls: 0.5138  loss_bbox: 0.2079
2023/06/11 17:22:53 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:23:27 - mmengine - INFO - Epoch(train)  [19][5/6]  lr: 6.2500e-04  eta: 0:48:29  time: 5.7935  data_time: 5.1988  memory: 5593  loss: 0.6718  loss_cls: 0.4708  loss_bbox: 0.2010
2023/06/11 17:23:27 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:24:00 - mmengine - INFO - Epoch(train)  [20][5/6]  lr: 6.2500e-04  eta: 0:47:42  time: 5.6867  data_time: 5.0947  memory: 5593  loss: 0.6271  loss_cls: 0.4310  loss_bbox: 0.1961
2023/06/11 17:24:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:24:00 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/11 17:24:09 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:24:10 - mmengine - INFO - bbox_mAP_copypaste: 0.926 0.994 0.994 -1.000 -1.000 0.926
2023/06/11 17:24:10 - mmengine - INFO - Epoch(val) [20][2/2]    coco/bbox_mAP: 0.9260  coco/bbox_mAP_50: 0.9940  coco/bbox_mAP_75: 0.9940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9260  data_time: 1.7980  time: 2.4217
2023/06/11 17:24:10 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_10.pth is removed
2023/06/11 17:24:11 - mmengine - INFO - The best checkpoint with 0.9260 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2023/06/11 17:24:44 - mmengine - INFO - Epoch(train)  [21][5/6]  lr: 6.2500e-04  eta: 0:46:57  time: 5.6324  data_time: 5.0429  memory: 5593  loss: 0.5881  loss_cls: 0.3969  loss_bbox: 0.1912
2023/06/11 17:24:45 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:25:19 - mmengine - INFO - Epoch(train)  [22][5/6]  lr: 6.2500e-04  eta: 0:46:19  time: 5.6040  data_time: 5.0139  memory: 5593  loss: 0.5589  loss_cls: 0.3710  loss_bbox: 0.1879
2023/06/11 17:25:20 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:25:55 - mmengine - INFO - Epoch(train)  [23][5/6]  lr: 6.2500e-04  eta: 0:45:43  time: 5.6535  data_time: 5.0633  memory: 5593  loss: 0.5306  loss_cls: 0.3460  loss_bbox: 0.1846
2023/06/11 17:25:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:26:28 - mmengine - INFO - Epoch(train)  [24][5/6]  lr: 6.2500e-04  eta: 0:45:01  time: 5.6371  data_time: 5.0457  memory: 5593  loss: 0.5088  loss_cls: 0.3268  loss_bbox: 0.1820
2023/06/11 17:26:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:27:03 - mmengine - INFO - Epoch(train)  [25][5/6]  lr: 6.2500e-04  eta: 0:44:24  time: 5.6377  data_time: 5.0447  memory: 5593  loss: 0.4898  loss_cls: 0.3095  loss_bbox: 0.1803
2023/06/11 17:27:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:27:39 - mmengine - INFO - Epoch(train)  [26][5/6]  lr: 6.2500e-04  eta: 0:43:51  time: 5.7135  data_time: 5.1237  memory: 5593  loss: 0.4719  loss_cls: 0.2945  loss_bbox: 0.1774
2023/06/11 17:27:40 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:28:13 - mmengine - INFO - Epoch(train)  [27][5/6]  lr: 6.2500e-04  eta: 0:43:12  time: 5.7193  data_time: 5.1348  memory: 5593  loss: 0.4573  loss_cls: 0.2823  loss_bbox: 0.1750
2023/06/11 17:28:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:28:47 - mmengine - INFO - Epoch(train)  [28][5/6]  lr: 6.2500e-04  eta: 0:42:32  time: 5.7400  data_time: 5.1565  memory: 5593  loss: 0.4484  loss_cls: 0.2737  loss_bbox: 0.1747
2023/06/11 17:28:48 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:29:20 - mmengine - INFO - Epoch(train)  [29][5/6]  lr: 6.2500e-04  eta: 0:41:51  time: 5.7343  data_time: 5.1547  memory: 5593  loss: 0.4354  loss_cls: 0.2628  loss_bbox: 0.1726
2023/06/11 17:29:21 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:29:57 - mmengine - INFO - Epoch(train)  [30][5/6]  lr: 6.2500e-04  eta: 0:41:18  time: 5.7588  data_time: 5.1800  memory: 5593  loss: 0.4272  loss_cls: 0.2558  loss_bbox: 0.1714
2023/06/11 17:29:57 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:29:57 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/11 17:30:07 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:30:07 - mmengine - INFO - bbox_mAP_copypaste: 0.934 0.993 0.993 -1.000 -1.000 0.934
2023/06/11 17:30:07 - mmengine - INFO - Epoch(val) [30][2/2]    coco/bbox_mAP: 0.9340  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9340  data_time: 1.7936  time: 2.4172
2023/06/11 17:30:07 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_20.pth is removed
2023/06/11 17:30:09 - mmengine - INFO - The best checkpoint with 0.9340 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
2023/06/11 17:30:43 - mmengine - INFO - Epoch(train)  [31][5/6]  lr: 6.2500e-04  eta: 0:40:42  time: 5.7393  data_time: 5.1606  memory: 5593  loss: 0.4175  loss_cls: 0.2475  loss_bbox: 0.1699
2023/06/11 17:30:43 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:31:18 - mmengine - INFO - Epoch(train)  [32][5/6]  lr: 6.2500e-04  eta: 0:40:06  time: 5.7759  data_time: 5.1989  memory: 5593  loss: 0.4093  loss_cls: 0.2405  loss_bbox: 0.1688
2023/06/11 17:31:19 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:31:53 - mmengine - INFO - Epoch(train)  [33][5/6]  lr: 6.2500e-04  eta: 0:39:31  time: 5.8037  data_time: 5.2267  memory: 5593  loss: 0.4053  loss_cls: 0.2371  loss_bbox: 0.1681
2023/06/11 17:31:54 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:32:27 - mmengine - INFO - Epoch(train)  [34][5/6]  lr: 6.2500e-04  eta: 0:38:51  time: 5.7485  data_time: 5.1697  memory: 5593  loss: 0.4019  loss_cls: 0.2339  loss_bbox: 0.1680
2023/06/11 17:32:27 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:33:02 - mmengine - INFO - Epoch(train)  [35][5/6]  lr: 6.2500e-04  eta: 0:38:17  time: 5.7478  data_time: 5.1608  memory: 5593  loss: 0.4002  loss_cls: 0.2320  loss_bbox: 0.1682
2023/06/11 17:33:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:33:37 - mmengine - INFO - Epoch(train)  [36][5/6]  lr: 6.2500e-04  eta: 0:37:41  time: 5.7831  data_time: 5.1937  memory: 5593  loss: 0.3914  loss_cls: 0.2257  loss_bbox: 0.1658
2023/06/11 17:33:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:34:14 - mmengine - INFO - Epoch(train)  [37][5/6]  lr: 6.2500e-04  eta: 0:37:08  time: 5.8427  data_time: 5.2508  memory: 5593  loss: 0.3879  loss_cls: 0.2239  loss_bbox: 0.1640
2023/06/11 17:34:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:34:49 - mmengine - INFO - Epoch(train)  [38][5/6]  lr: 6.2500e-04  eta: 0:36:32  time: 5.8209  data_time: 5.2275  memory: 5593  loss: 0.3836  loss_cls: 0.2204  loss_bbox: 0.1632
2023/06/11 17:34:49 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:35:25 - mmengine - INFO - Epoch(train)  [39][5/6]  lr: 6.2500e-04  eta: 0:35:58  time: 5.8459  data_time: 5.2545  memory: 5593  loss: 0.3803  loss_cls: 0.2173  loss_bbox: 0.1631
2023/06/11 17:35:25 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:36:00 - mmengine - INFO - Epoch(train)  [40][5/6]  lr: 6.2500e-04  eta: 0:35:23  time: 5.8474  data_time: 5.2554  memory: 5593  loss: 0.3758  loss_cls: 0.2139  loss_bbox: 0.1620
2023/06/11 17:36:01 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:36:01 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/11 17:36:11 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:36:11 - mmengine - INFO - bbox_mAP_copypaste: 0.945 0.994 0.994 -1.000 -1.000 0.945
2023/06/11 17:36:11 - mmengine - INFO - Epoch(val) [40][2/2]    coco/bbox_mAP: 0.9450  coco/bbox_mAP_50: 0.9940  coco/bbox_mAP_75: 0.9940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9450  data_time: 1.8718  time: 2.5047
2023/06/11 17:36:11 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_30.pth is removed
2023/06/11 17:36:13 - mmengine - INFO - The best checkpoint with 0.9450 coco/bbox_mAP at 40 epoch is saved to best_coco_bbox_mAP_epoch_40.pth.
2023/06/11 17:36:48 - mmengine - INFO - Epoch(train)  [41][5/6]  lr: 6.2500e-04  eta: 0:34:49  time: 5.8766  data_time: 5.2825  memory: 5593  loss: 0.3726  loss_cls: 0.2109  loss_bbox: 0.1617
2023/06/11 17:36:49 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:37:22 - mmengine - INFO - Epoch(train)  [42][5/6]  lr: 6.2500e-04  eta: 0:34:11  time: 5.8669  data_time: 5.2724  memory: 5593  loss: 0.3671  loss_cls: 0.2065  loss_bbox: 0.1605
2023/06/11 17:37:22 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:37:55 - mmengine - INFO - Epoch(train)  [43][5/6]  lr: 6.2500e-04  eta: 0:33:33  time: 5.8295  data_time: 5.2404  memory: 5593  loss: 0.3581  loss_cls: 0.1999  loss_bbox: 0.1582
2023/06/11 17:37:56 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:38:30 - mmengine - INFO - Epoch(train)  [44][5/6]  lr: 6.2500e-04  eta: 0:32:58  time: 5.8519  data_time: 5.2626  memory: 5593  loss: 0.3575  loss_cls: 0.1990  loss_bbox: 0.1585
2023/06/11 17:38:30 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:39:05 - mmengine - INFO - Epoch(train)  [45][5/6]  lr: 6.2500e-04  eta: 0:32:22  time: 5.8106  data_time: 5.2245  memory: 5593  loss: 0.3510  loss_cls: 0.1939  loss_bbox: 0.1571
2023/06/11 17:39:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:39:39 - mmengine - INFO - Epoch(train)  [46][5/6]  lr: 6.2500e-04  eta: 0:31:45  time: 5.7822  data_time: 5.1951  memory: 5593  loss: 0.3473  loss_cls: 0.1908  loss_bbox: 0.1565
2023/06/11 17:39:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:40:12 - mmengine - INFO - Epoch(train)  [47][5/6]  lr: 6.2500e-04  eta: 0:31:08  time: 5.7353  data_time: 5.1475  memory: 5593  loss: 0.3449  loss_cls: 0.1896  loss_bbox: 0.1553
2023/06/11 17:40:13 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:40:45 - mmengine - INFO - Epoch(train)  [48][5/6]  lr: 6.2500e-04  eta: 0:30:30  time: 5.6786  data_time: 5.0907  memory: 5593  loss: 0.3390  loss_cls: 0.1862  loss_bbox: 0.1528
2023/06/11 17:40:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:41:19 - mmengine - INFO - Epoch(train)  [49][5/6]  lr: 6.2500e-04  eta: 0:29:54  time: 5.6575  data_time: 5.0718  memory: 5593  loss: 0.3369  loss_cls: 0.1845  loss_bbox: 0.1525
2023/06/11 17:41:19 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:41:53 - mmengine - INFO - Epoch(train)  [50][5/6]  lr: 6.2500e-04  eta: 0:29:18  time: 5.6396  data_time: 5.0545  memory: 5593  loss: 0.3378  loss_cls: 0.1852  loss_bbox: 0.1526
2023/06/11 17:41:53 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:41:53 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/11 17:42:01 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:42:02 - mmengine - INFO - bbox_mAP_copypaste: 0.953 0.993 0.993 -1.000 -1.000 0.953
2023/06/11 17:42:02 - mmengine - INFO - Epoch(val) [50][2/2]    coco/bbox_mAP: 0.9530  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9530  data_time: 1.6849  time: 2.2697
2023/06/11 17:42:02 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_40.pth is removed
2023/06/11 17:42:03 - mmengine - INFO - The best checkpoint with 0.9530 coco/bbox_mAP at 50 epoch is saved to best_coco_bbox_mAP_epoch_50.pth.
2023/06/11 17:42:37 - mmengine - INFO - Epoch(train)  [51][5/6]  lr: 6.2481e-04  eta: 0:28:42  time: 5.6532  data_time: 5.0695  memory: 5593  loss: 0.3381  loss_cls: 0.1854  loss_bbox: 0.1527
2023/06/11 17:42:38 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:43:11 - mmengine - INFO - Epoch(train)  [52][5/6]  lr: 6.2384e-04  eta: 0:28:06  time: 5.6366  data_time: 5.0540  memory: 5593  loss: 0.3378  loss_cls: 0.1859  loss_bbox: 0.1519
2023/06/11 17:43:11 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:43:45 - mmengine - INFO - Epoch(train)  [53][5/6]  lr: 6.2202e-04  eta: 0:27:30  time: 5.6029  data_time: 5.0177  memory: 5593  loss: 0.3377  loss_cls: 0.1860  loss_bbox: 0.1517
2023/06/11 17:43:45 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:44:18 - mmengine - INFO - Epoch(train)  [54][5/6]  lr: 6.1939e-04  eta: 0:26:53  time: 5.5856  data_time: 5.0016  memory: 5593  loss: 0.3356  loss_cls: 0.1846  loss_bbox: 0.1510
2023/06/11 17:44:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:44:51 - mmengine - INFO - Epoch(train)  [55][5/6]  lr: 6.1593e-04  eta: 0:26:17  time: 5.5750  data_time: 4.9892  memory: 5593  loss: 0.3339  loss_cls: 0.1830  loss_bbox: 0.1509
2023/06/11 17:44:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:45:24 - mmengine - INFO - Epoch(train)  [56][5/6]  lr: 6.1167e-04  eta: 0:25:40  time: 5.5906  data_time: 5.0003  memory: 5593  loss: 0.3328  loss_cls: 0.1816  loss_bbox: 0.1512
2023/06/11 17:45:24 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:45:59 - mmengine - INFO - Epoch(train)  [57][5/6]  lr: 6.0663e-04  eta: 0:25:05  time: 5.6035  data_time: 5.0122  memory: 5593  loss: 0.3271  loss_cls: 0.1782  loss_bbox: 0.1488
2023/06/11 17:46:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:46:35 - mmengine - INFO - Epoch(train)  [58][5/6]  lr: 6.0082e-04  eta: 0:24:31  time: 5.6518  data_time: 5.0598  memory: 5593  loss: 0.3261  loss_cls: 0.1771  loss_bbox: 0.1490
2023/06/11 17:46:36 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:47:08 - mmengine - INFO - Epoch(train)  [59][5/6]  lr: 5.9426e-04  eta: 0:23:55  time: 5.6261  data_time: 5.0307  memory: 5593  loss: 0.3215  loss_cls: 0.1741  loss_bbox: 0.1473
2023/06/11 17:47:09 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:47:43 - mmengine - INFO - Epoch(train)  [60][5/6]  lr: 5.8699e-04  eta: 0:23:20  time: 5.6567  data_time: 5.0603  memory: 5593  loss: 0.3172  loss_cls: 0.1707  loss_bbox: 0.1465
2023/06/11 17:47:43 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:47:43 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/11 17:47:52 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:47:52 - mmengine - INFO - bbox_mAP_copypaste: 0.958 0.993 0.993 -1.000 -1.000 0.958
2023/06/11 17:47:52 - mmengine - INFO - Epoch(val) [60][2/2]    coco/bbox_mAP: 0.9580  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9580  data_time: 1.7041  time: 2.2738
2023/06/11 17:47:52 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_50.pth is removed
2023/06/11 17:47:54 - mmengine - INFO - The best checkpoint with 0.9580 coco/bbox_mAP at 60 epoch is saved to best_coco_bbox_mAP_epoch_60.pth.
2023/06/11 17:48:26 - mmengine - INFO - Epoch(train)  [61][5/6]  lr: 5.7903e-04  eta: 0:22:44  time: 5.6481  data_time: 5.0498  memory: 5593  loss: 0.3124  loss_cls: 0.1669  loss_bbox: 0.1455
2023/06/11 17:48:27 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:49:01 - mmengine - INFO - Epoch(train)  [62][5/6]  lr: 5.7042e-04  eta: 0:22:09  time: 5.6636  data_time: 5.0660  memory: 5593  loss: 0.3084  loss_cls: 0.1643  loss_bbox: 0.1442
2023/06/11 17:49:01 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:49:34 - mmengine - INFO - Epoch(train)  [63][5/6]  lr: 5.6118e-04  eta: 0:21:33  time: 5.6398  data_time: 5.0421  memory: 5593  loss: 0.3043  loss_cls: 0.1612  loss_bbox: 0.1431
2023/06/11 17:49:34 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:50:09 - mmengine - INFO - Epoch(train)  [64][5/6]  lr: 5.5135e-04  eta: 0:20:59  time: 5.7014  data_time: 5.1082  memory: 5597  loss: 0.3002  loss_cls: 0.1581  loss_bbox: 0.1421
2023/06/11 17:50:09 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:50:43 - mmengine - INFO - Epoch(train)  [65][5/6]  lr: 5.4098e-04  eta: 0:20:24  time: 5.6945  data_time: 5.1031  memory: 5593  loss: 0.2986  loss_cls: 0.1562  loss_bbox: 0.1424
2023/06/11 17:50:44 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:51:17 - mmengine - INFO - Epoch(train)  [66][5/6]  lr: 5.3010e-04  eta: 0:19:48  time: 5.6347  data_time: 5.0444  memory: 5593  loss: 0.2961  loss_cls: 0.1545  loss_bbox: 0.1417
2023/06/11 17:51:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:51:51 - mmengine - INFO - Epoch(train)  [67][5/6]  lr: 5.1875e-04  eta: 0:19:13  time: 5.6158  data_time: 5.0278  memory: 5593  loss: 0.2953  loss_cls: 0.1530  loss_bbox: 0.1423
2023/06/11 17:51:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:52:25 - mmengine - INFO - Epoch(train)  [68][5/6]  lr: 5.0698e-04  eta: 0:18:38  time: 5.6530  data_time: 5.0686  memory: 5593  loss: 0.2934  loss_cls: 0.1512  loss_bbox: 0.1422
2023/06/11 17:52:25 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:53:00 - mmengine - INFO - Epoch(train)  [69][5/6]  lr: 4.9485e-04  eta: 0:18:03  time: 5.6765  data_time: 5.0963  memory: 5593  loss: 0.2936  loss_cls: 0.1513  loss_bbox: 0.1423
2023/06/11 17:53:00 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:53:34 - mmengine - INFO - Epoch(train)  [70][5/6]  lr: 4.8238e-04  eta: 0:17:28  time: 5.6653  data_time: 5.0865  memory: 5593  loss: 0.2946  loss_cls: 0.1520  loss_bbox: 0.1427
2023/06/11 17:53:34 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:53:34 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/11 17:53:42 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:53:42 - mmengine - INFO - bbox_mAP_copypaste: 0.960 0.993 0.993 -1.000 -1.000 0.960
2023/06/11 17:53:42 - mmengine - INFO - Epoch(val) [70][2/2]    coco/bbox_mAP: 0.9600  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9600  data_time: 1.6683  time: 2.1504
2023/06/11 17:53:42 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_60.pth is removed
2023/06/11 17:53:43 - mmengine - INFO - The best checkpoint with 0.9600 coco/bbox_mAP at 70 epoch is saved to best_coco_bbox_mAP_epoch_70.pth.
2023/06/11 17:54:16 - mmengine - INFO - Epoch(train)  [71][5/6]  lr: 4.6965e-04  eta: 0:16:53  time: 5.6662  data_time: 5.0890  memory: 5593  loss: 0.2944  loss_cls: 0.1516  loss_bbox: 0.1427
2023/06/11 17:54:17 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:54:52 - mmengine - INFO - Epoch(train)  [72][5/6]  lr: 4.5668e-04  eta: 0:16:18  time: 5.7015  data_time: 5.1215  memory: 5593  loss: 0.2916  loss_cls: 0.1500  loss_bbox: 0.1416
2023/06/11 17:54:53 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:55:27 - mmengine - INFO - Epoch(train)  [73][5/6]  lr: 4.4354e-04  eta: 0:15:44  time: 5.6890  data_time: 5.1025  memory: 5593  loss: 0.2916  loss_cls: 0.1506  loss_bbox: 0.1410
2023/06/11 17:55:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:56:02 - mmengine - INFO - Epoch(train)  [74][5/6]  lr: 4.3028e-04  eta: 0:15:09  time: 5.7302  data_time: 5.1326  memory: 5593  loss: 0.2947  loss_cls: 0.1528  loss_bbox: 0.1419
2023/06/11 17:56:02 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:56:38 - mmengine - INFO - Epoch(train)  [75][5/6]  lr: 4.1695e-04  eta: 0:14:35  time: 5.7790  data_time: 5.1798  memory: 5593  loss: 0.2931  loss_cls: 0.1526  loss_bbox: 0.1405
2023/06/11 17:56:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:57:13 - mmengine - INFO - Epoch(train)  [76][5/6]  lr: 4.0360e-04  eta: 0:14:00  time: 5.8028  data_time: 5.1978  memory: 5593  loss: 0.2932  loss_cls: 0.1533  loss_bbox: 0.1400
2023/06/11 17:57:13 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:57:47 - mmengine - INFO - Epoch(train)  [77][5/6]  lr: 3.9029e-04  eta: 0:13:25  time: 5.7705  data_time: 5.1630  memory: 5593  loss: 0.2914  loss_cls: 0.1524  loss_bbox: 0.1390
2023/06/11 17:57:47 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:58:21 - mmengine - INFO - Epoch(train)  [78][5/6]  lr: 3.7706e-04  eta: 0:12:50  time: 5.7803  data_time: 5.1692  memory: 5593  loss: 0.2910  loss_cls: 0.1520  loss_bbox: 0.1390
2023/06/11 17:58:22 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:58:55 - mmengine - INFO - Epoch(train)  [79][5/6]  lr: 3.6398e-04  eta: 0:12:15  time: 5.7719  data_time: 5.1583  memory: 5593  loss: 0.2907  loss_cls: 0.1516  loss_bbox: 0.1391
2023/06/11 17:58:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:59:28 - mmengine - INFO - Epoch(train)  [80][5/6]  lr: 3.5108e-04  eta: 0:11:40  time: 5.7275  data_time: 5.1106  memory: 5593  loss: 0.2886  loss_cls: 0.1503  loss_bbox: 0.1382
2023/06/11 17:59:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 17:59:29 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/11 17:59:37 - mmengine - INFO - Evaluating bbox...
2023/06/11 17:59:37 - mmengine - INFO - bbox_mAP_copypaste: 0.962 0.994 0.994 -1.000 -1.000 0.962
2023/06/11 17:59:37 - mmengine - INFO - Epoch(val) [80][2/2]    coco/bbox_mAP: 0.9620  coco/bbox_mAP_50: 0.9940  coco/bbox_mAP_75: 0.9940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9620  data_time: 1.6717  time: 2.1729
2023/06/11 17:59:37 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_70.pth is removed
2023/06/11 17:59:39 - mmengine - INFO - The best checkpoint with 0.9620 coco/bbox_mAP at 80 epoch is saved to best_coco_bbox_mAP_epoch_80.pth.
2023/06/11 18:00:13 - mmengine - INFO - Epoch(train)  [81][5/6]  lr: 3.3843e-04  eta: 0:11:05  time: 5.7343  data_time: 5.1207  memory: 5593  loss: 0.2897  loss_cls: 0.1508  loss_bbox: 0.1389
2023/06/11 18:00:13 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:00:47 - mmengine - INFO - Epoch(train)  [82][5/6]  lr: 3.2607e-04  eta: 0:10:30  time: 5.6984  data_time: 5.0931  memory: 5593  loss: 0.2859  loss_cls: 0.1484  loss_bbox: 0.1375
2023/06/11 18:00:47 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:01:21 - mmengine - INFO - Epoch(train)  [83][5/6]  lr: 3.1405e-04  eta: 0:09:55  time: 5.6378  data_time: 5.0338  memory: 5593  loss: 0.2835  loss_cls: 0.1463  loss_bbox: 0.1371
2023/06/11 18:01:21 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:01:55 - mmengine - INFO - Epoch(train)  [84][5/6]  lr: 3.0242e-04  eta: 0:09:20  time: 5.6740  data_time: 5.0726  memory: 5593  loss: 0.2796  loss_cls: 0.1434  loss_bbox: 0.1362
2023/06/11 18:01:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:02:29 - mmengine - INFO - Epoch(train)  [85][5/6]  lr: 2.9122e-04  eta: 0:08:46  time: 5.6545  data_time: 5.0586  memory: 5593  loss: 0.2794  loss_cls: 0.1435  loss_bbox: 0.1359
2023/06/11 18:02:29 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:03:03 - mmengine - INFO - Epoch(train)  [86][5/6]  lr: 2.8051e-04  eta: 0:08:11  time: 5.6332  data_time: 5.0393  memory: 5593  loss: 0.2764  loss_cls: 0.1414  loss_bbox: 0.1350
2023/06/11 18:03:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:03:36 - mmengine - INFO - Epoch(train)  [87][5/6]  lr: 2.7031e-04  eta: 0:07:36  time: 5.6501  data_time: 5.0600  memory: 5593  loss: 0.2737  loss_cls: 0.1399  loss_bbox: 0.1338
2023/06/11 18:03:36 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:04:10 - mmengine - INFO - Epoch(train)  [88][5/6]  lr: 2.6067e-04  eta: 0:07:01  time: 5.6511  data_time: 5.0647  memory: 5593  loss: 0.2729  loss_cls: 0.1389  loss_bbox: 0.1341
2023/06/11 18:04:10 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:04:45 - mmengine - INFO - Epoch(train)  [89][5/6]  lr: 2.5164e-04  eta: 0:06:27  time: 5.6168  data_time: 5.0340  memory: 5593  loss: 0.2705  loss_cls: 0.1379  loss_bbox: 0.1326
2023/06/11 18:04:45 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:05:19 - mmengine - INFO - Epoch(train)  [90][5/6]  lr: 2.4324e-04  eta: 0:05:52  time: 5.6337  data_time: 5.0553  memory: 5593  loss: 0.2708  loss_cls: 0.1379  loss_bbox: 0.1329
2023/06/11 18:05:19 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:05:19 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/11 18:05:27 - mmengine - INFO - Evaluating bbox...
2023/06/11 18:05:28 - mmengine - INFO - bbox_mAP_copypaste: 0.966 0.994 0.994 -1.000 -1.000 0.966
2023/06/11 18:05:28 - mmengine - INFO - Epoch(val) [90][2/2]    coco/bbox_mAP: 0.9660  coco/bbox_mAP_50: 0.9940  coco/bbox_mAP_75: 0.9940  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9660  data_time: 1.6742  time: 2.1642
2023/06/11 18:05:28 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_80.pth is removed
2023/06/11 18:05:29 - mmengine - INFO - The best checkpoint with 0.9660 coco/bbox_mAP at 90 epoch is saved to best_coco_bbox_mAP_epoch_90.pth.
2023/06/11 18:06:03 - mmengine - INFO - Epoch(train)  [91][5/6]  lr: 2.3550e-04  eta: 0:05:17  time: 5.6710  data_time: 5.0918  memory: 5593  loss: 0.2673  loss_cls: 0.1359  loss_bbox: 0.1314
2023/06/11 18:06:03 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:06:36 - mmengine - INFO - Epoch(train)  [92][5/6]  lr: 2.2847e-04  eta: 0:04:42  time: 5.6534  data_time: 5.0746  memory: 5593  loss: 0.2670  loss_cls: 0.1357  loss_bbox: 0.1313
2023/06/11 18:06:37 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:07:10 - mmengine - INFO - Epoch(train)  [93][5/6]  lr: 2.2216e-04  eta: 0:04:08  time: 5.6479  data_time: 5.0645  memory: 5593  loss: 0.2648  loss_cls: 0.1341  loss_bbox: 0.1308
2023/06/11 18:07:10 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:07:44 - mmengine - INFO - Epoch(train)  [94][5/6]  lr: 2.1660e-04  eta: 0:03:33  time: 5.6316  data_time: 5.0475  memory: 5593  loss: 0.2656  loss_cls: 0.1347  loss_bbox: 0.1310
2023/06/11 18:07:44 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:08:17 - mmengine - INFO - Epoch(train)  [95][5/6]  lr: 2.1182e-04  eta: 0:02:58  time: 5.6378  data_time: 5.0504  memory: 5593  loss: 0.2658  loss_cls: 0.1342  loss_bbox: 0.1316
2023/06/11 18:08:17 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:08:17 - mmengine - INFO - Switch pipeline now!
2023/06/11 18:08:30 - mmengine - INFO - Epoch(train)  [96][5/6]  lr: 2.0783e-04  eta: 0:02:23  time: 5.2302  data_time: 4.6506  memory: 5593  loss: 0.2572  loss_cls: 0.1298  loss_bbox: 0.1274
2023/06/11 18:08:31 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:08:43 - mmengine - INFO - Epoch(train)  [97][5/6]  lr: 2.0464e-04  eta: 0:01:48  time: 4.7892  data_time: 4.2163  memory: 5593  loss: 0.2468  loss_cls: 0.1238  loss_bbox: 0.1230
2023/06/11 18:08:43 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:08:55 - mmengine - INFO - Epoch(train)  [98][5/6]  lr: 2.0228e-04  eta: 0:01:13  time: 4.3208  data_time: 3.7533  memory: 5593  loss: 0.2302  loss_cls: 0.1128  loss_bbox: 0.1174
2023/06/11 18:08:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:09:07 - mmengine - INFO - Epoch(train)  [99][5/6]  lr: 2.0075e-04  eta: 0:00:39  time: 3.9086  data_time: 3.3484  memory: 5593  loss: 0.2170  loss_cls: 0.1041  loss_bbox: 0.1129
2023/06/11 18:09:07 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:09:19 - mmengine - INFO - Epoch(train) [100][5/6]  lr: 2.0005e-04  eta: 0:00:05  time: 3.4563  data_time: 2.9025  memory: 5593  loss: 0.2029  loss_cls: 0.0950  loss_bbox: 0.1079
2023/06/11 18:09:20 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-100e_cola_20230611_171137
2023/06/11 18:09:20 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/11 18:09:27 - mmengine - INFO - Evaluating bbox...
2023/06/11 18:09:27 - mmengine - INFO - bbox_mAP_copypaste: 0.967 0.993 0.993 -1.000 -1.000 0.967
2023/06/11 18:09:27 - mmengine - INFO - Epoch(val) [100][2/2]    coco/bbox_mAP: 0.9670  coco/bbox_mAP_50: 0.9930  coco/bbox_mAP_75: 0.9930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9670  data_time: 1.6370  time: 2.1086
2023/06/11 18:09:27 - mmengine - INFO - The previous best checkpoint /home/elsa/Workspace/OpenMMLab/hw3/work_dirs/rtmdet_tiny_1xb12-100e_cola/best_coco_bbox_mAP_epoch_90.pth is removed
2023/06/11 18:09:29 - mmengine - INFO - The best checkpoint with 0.9670 coco/bbox_mAP at 100 epoch is saved to best_coco_bbox_mAP_epoch_100.pth.
